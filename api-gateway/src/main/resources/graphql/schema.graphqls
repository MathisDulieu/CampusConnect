type Query {
    me: User
}

type Mutation {
    login(email: String!, password: String!): String
    register(email: String!, username: String!, password: String!, role: String!): String
    updateUser(username: String, email: String, oldPassword: String, newPassword: String): String
    deleteUser: String
}

type User {
    id: ID!
    email: String!
    username: String!
    password: String
    role: Role!
}

enum Role {
    STUDENT
    PROFESSOR
    ADMIN
}

type Class {
    id: ID!
    name: String!
    description: String
    students: [User]
    professor: User
}

input ClassInput {
    name: String!
    description: String
    studentIds: [ID!]
}

input SortInput {
    field: String!
    order: SortOrder!
}

enum SortOrder {
    ASC
    DESC
}